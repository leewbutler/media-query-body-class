<!-- BEGIN: media-query-body-class.inc -->
<!-- VERY BASIC EXAMPLE USAGE FOR DRUPAL:
  1. See "CONFIG" below to define your body class names.
  2. After CONFIG, add this file to your theme's JS folder at:
          [your-theme]/js/media-query-body-class.inc
  3. Then include the file in your html at some point after the <body> tag,
     for example, from within this tpl:   [your-theme]/templates/page.tpl
  4. ...you can open with this call to include the file:
         // Include our media-query-body class file from the js folder.
         <$php include __DIR__ . '/../js/media-query-body-class.inc.htm'; $>
  TODO: Make a drupal specific version, package as module, which   writes
        the INITIAL <body> class to the page SERVER-SIDE, as welll as emmiting
        this js to manage body class changes thereafter on the CLIENT-SIDE.
-->
  <style id="mq-classes-config" class="mq-classes" type="text/css">
    /* CONFIG: Modify the media queries below to fit your needs.
       Each media query should contain (only) a different value for
       the .mq-classes "content" attribute. This value will be applied
       to the <body> class when the given media query is in effect. */
    @media only screen and (min-width: 840px) {
      .mq-classes{ content: "forGrid12";}
    }
    @media only screen and (min-width: 481px) and (max-width: 839px) {
      .mq-classes{ content: "forGrid6";}
    }
    @media only screen and (max-width: 480px){
      .mq-classes{ content: "forGrid2";}
    }
  </style>
  <script type="text/javascript">
    // This accompanying js contains no configs. It can be left as is.
    function initMqBodyClassing(){
      // Update the body class once when called.
      updateMqClassOnBody();
      // Register to update the body class again on window resize. Register it through
      // the following "native js" debounce function, inspired by this jquery plugin:
      // https://github.com/louisremi/jquery-smartresize/blob/master/README.md
      var mqDebounce = function (func, threshold, execAsap) {
          var mqTimeout;
          return function mqDebounced () {
              var obj = this, args = arguments;
              function mqDelayed () {
                  if (!execAsap)
                      func.apply(obj, args);
                  mqTimeout = null;
              };
              if (mqTimeout)
                  clearTimeout(mqTimeout);
              else if (execAsap)
                  func.apply(obj, args);
              mqTimeout = setTimeout(mqDelayed, threshold || 100);
          };
      }
      // Register it.
      window.onresize = mqDebounce(function (e) {
        updateMqClassOnBody();
      }, 50, true);  // option to adjust debounce timing here
    };

    function updateMqClassOnBody(){
      // Debug // alert('BODY CLASS BEFORE: \n' + document.body.getAttribute('class'));
      activeMqClass = ' ' + getActiveMqClass() + ' '; // Explicitly space padded for simple removal later.
      if (document.body.getAttribute('class').indexOf(activeMqClass) == -1) {
        bodyClasses = removeMqClassesFrom(document.body.getAttribute('class'));
        bodyClasses += activeMqClass;
        document.body.setAttribute('class', bodyClasses);
        // Debug //alert('BODY CLASS AFTER: \n' + document.body.getAttribute('class'));
      }
    }

    function getActiveMqClass(){
      contentVal = window.getComputedStyle(document.getElementById('mq-classes-config')).content;
      // Replace strips potential surrounding quotes
      contentVal = contentVal.replace(/"/g, '');
      return contentVal;
    }

    function getAllMqClasses(){
      // Parse once then store it global
      if(typeof window.MqClassNames === 'undefined'){
        var styleTag = document.getElementById ('mq-classes-config');
        // x-browser friendly way to get the style sheet as a dom object.
        var sheet = styleTag.sheet ? styleTag.sheet : styleTag.styleSheet;
        // Parse the stylesheet to get each class name.
        var mqNames = new Array();
        for (var i=0; i < sheet.cssRules.length; i++){
          // Replace strips potential surrounding quotes
          mqNames[i] = (sheet.cssRules[i].cssRules[0].style.content).replace(/"/g, '');
        }
        window.MqClassNames = mqNames;
      }
      return window.MqClassNames;
    }

    function removeMqClassesFrom(str){
        mqClasses = getAllMqClasses();
        for (var i = 0; i < mqClasses.length; i++){
          // Assumes classes were explicitly space padded for simple removal.
          mqClass = ' ' + mqClasses[i] + ' ';
          str = str.replace(mqClass, '');
        }
        return str;
    }
    // Now one simple init call to get things going...
    initMqBodyClassing();
  </script>
<!-- /END: media-query-body-class.inc -->
